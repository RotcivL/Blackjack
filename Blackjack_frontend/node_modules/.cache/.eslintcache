[{"/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/index.js":"1","/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/App.js":"2","/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/reportWebVitals.js":"3","/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/data.js":"4","/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/components/Players.jsx":"5","/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/components/Dealer.jsx":"6","/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/components/StartDialog.jsx":"7","/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/components/Cards.jsx":"8","/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/components/PlayerStatus.jsx":"9","/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/Web3Client.js":"10","/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/components/GameOverDialog.jsx":"11"},{"size":497,"mtime":1652702286687,"results":"12","hashOfConfig":"13"},{"size":9418,"mtime":1653393762797,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1652281823701,"results":"15","hashOfConfig":"13"},{"size":485,"mtime":1652702286687,"results":"16","hashOfConfig":"13"},{"size":2080,"mtime":1653381834591,"results":"17","hashOfConfig":"13"},{"size":694,"mtime":1653371647443,"results":"18","hashOfConfig":"13"},{"size":3460,"mtime":1653394339646,"results":"19","hashOfConfig":"13"},{"size":1562,"mtime":1653371677925,"results":"20","hashOfConfig":"13"},{"size":2050,"mtime":1653381813751,"results":"21","hashOfConfig":"13"},{"size":4402,"mtime":1653390218672,"results":"22","hashOfConfig":"13"},{"size":1631,"mtime":1653374458452,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"7lln7j",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/index.js",[],["53","54"],"/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/App.js",["55","56","57","58","59","60","61","62","63"],"\nimport { React, useState, useEffect } from 'react';\nimport Dealer from './components/Dealer';\nimport Player from './components/Players';\nimport styles from \"../src/style/table.module.css\"\nimport backgroundImage from \"./table_background.jpeg\"\nimport StartDialog from './components/StartDialog';\nimport Button from '@mui/material/Button';\nimport {initializeContract, joinGame, getStatus, startGame,getHandCard,playerHitCard, getGameStart, getPlayerWin, playerStand} from \"./Web3Client\";\nimport GameOverDialog from './components/GameOverDialog';\n\n\n\n\n\n//import ReactDOM from 'react-dom';\n\n\n\nconst App=()=> {\n\n  const PROVIDER_URL='http://localhost:3000'\n\n  const connectWalletHandler= async()=>{\n    //const web3= new Web3(PROVIDER_URL)\n    let provider=window.ethereum;\n    if(typeof provider!==\"undefined\"){\n      try{\n        const accounts= await provider.request({method:\"eth_requestAccounts\"})\n        setAccount(accounts[0])\n      }catch(err){\n        console.log(\"err:\",err)\n      }\n       \n\n    }\n    else{\n      alert(\"You need to install MetaMask.\")\n    }\n\n  }\n    \n\n  \n\n\n\n  /*\n  This method is for initiallizing deck \n  */\n  const deckBuilder=()=>{\n    const temp_deck=[]\n    const values = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\n    const types = [\"C\", \"D\", \"H\", \"S\"]; \n    for (let i=0;i<types.length;i++ ){\n      for(let j=0;j<values.length;j++){\n       temp_deck.push({value:values[j],\n                   type:types[i]})\n      }\n    }\n    for (let i = temp_deck.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = temp_deck[i];\n      temp_deck[i] = temp_deck[j];\n      temp_deck[j] = temp;\n  }\n  return temp_deck\n   }\n\n   const cardInterpreter=(cardIndexList)=>{\n     const temp_cardList=[]\n     const values = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\n     const types = [\"C\", \"D\", \"H\", \"S\"];\n     for (let i=0;i<cardIndexList.length;i++){\n       const index=cardIndexList[i]\n       const value_index=index%52%13\n       const type_index=Math.floor(index%52/13)\n       const card={value:values[value_index],type:types[type_index]}\n       temp_cardList.push(card)\n     }\n     return temp_cardList\n\n   }\n \n   \n   \n  const dealingInterval=2000;\n\n  const [account,setAccount]=useState(null)\n\n  const [dealer,setDealer]=useState(null)\n\n  //const [metamaskAccount,setmetamaskAccount]=useState(null)\n\n  const [dealerBal,setDealerBal]=useState(null)\n\n  const[player,setPlayer]=useState(null)\n\n  const[playerBal,setPlayerBal]=useState(null)\n\n  const[contractBal,setContractBal]=useState(null)\n\n  const[gameStart,setGameStart]=useState(null)\n\n  const[playerWin,setPlayerWin]=useState(null)\n\n  \n\n\n\n  \n  const initialCardCount=2\n  \n  const [isDealerStart,setisDealerStart]=useState(null)\n\n  const[playerList,setPlayerList]=useState([])\n  \n  const[deck,]=useState(deckBuilder())\n\n  const[dealerCardList, setDealerCardList]=useState([])\n\n  const[turnIndex,setTurnIndex]=useState('')\n\n  const[isDealerTurn,setIsDealerTurn]=useState(false)\n\n  const [isPlayerAccount,setIsPlayerAccount]=useState(null)\n\n  const [isDealerAccount,setIsDealerAccount]=useState(null)\n\n\n  const wait = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n  /*\n  Fetch players' data and then initiallize player list.\n  When isRoundStarted truns true, each player gets their initial cards by triggering dealing method\n  */\n  useEffect(() => {\n    async function listenMMAccount() {\n      window.ethereum.on(\"accountsChanged\", async function() {\n        // Time to reload your interface with accounts[0]!\n        let provider=window.ethereum;\n        const accounts= await provider.request({method:\"eth_requestAccounts\"})\n        setAccount(accounts[0])\n       \n        \n        \n        // accounts = await web3.eth.getAccounts();\n      });\n    }\n    listenMMAccount();\n  }, []);\n  \n  \n\n\nuseEffect(()=>{\n  connectWalletHandler()\n  setStatusHandler()\n  if(isDealerStart===true){\n    setHandHandler()\n    console.log(\"hook called\")\n  }\n  \n},[isDealerStart,player])\n\nuseEffect(()=>{\n  const currentUser= async()=>{\n    if(player!==null&&dealer!==null&&account!==null){\n   \n      setIsDealerAccount(dealer.toLowerCase()===account.toLowerCase());\n      setIsPlayerAccount(player.toLowerCase()===account.toLowerCase());\n    }\n\n  }\n  currentUser()\n},[account,player,dealer])\n\n\n\nconst joinGameHandler= async ()=>{\n  const result=await joinGame()\n  if(result){\n    await setStatusHandler()\n  \n  }\n\n}\n\nconst startGameHandler=async()=>{\n  const result=await startGame()\n  if(result){\n    await setStatusHandler()\n    setisDealerStart(true)\n    \n    \n    await wait(dealingInterval*4)\n    const gameStart_=await getGameStart()\n    const playerWin_=await getPlayerWin()\n    setGameStart(gameStart_)\n    setPlayerWin(playerWin_)\n  }\n}\n\nconst setStatusHandler=async()=>{\n  const statusArr=await getStatus()\n  //setmetamaskAccount(statusArr.metamask_account)\n  setDealer(statusArr[0].dealer)\n  setDealerBal(statusArr[0].dealerBal)\n  setPlayer(statusArr[0].player)\n  setPlayerBal(statusArr[0].playerBal)\n  setContractBal(statusArr[0].contractBal)\n  \n  //setGameStart(statusArr[0].gameStart)\n  \n\n}\n\nconst setHandHandler=async()=>{\n   const handCard=await getHandCard()\n   const player_add=player\n   //TODO parameterize bet\n   const temp_playerList=playerList\n   const temp_dealerCardList=dealerCardList\n   const dealerHand_index=handCard.dealerHand\n   const playerHand_index=handCard.playerHand\n   const dealerHand=cardInterpreter(dealerHand_index)\n   const playerHand=cardInterpreter(playerHand_index)\n   const player_json={address:player_add,cardList:[],name:\"goodguy\",isMe:true,bet:10}\n   temp_playerList.push(player_json)\n   for (let i=0;i<2;i++){\n    temp_playerList[0].cardList.push(playerHand[i])\n    setPlayerList([...temp_playerList])\n    await wait(dealingInterval)\n    temp_dealerCardList.push(dealerHand[i])\n    setDealerCardList([...temp_dealerCardList])\n    await wait(dealingInterval)\n   }\n   //setisDealerStart(false)\n   setTurnIndex(0)\n   //console.log(dealerHand,dealerHand_index)\n   \n\n   //console.log(dealerCardList,playerList)\n   \n}\n\n \n   \n    \n/*\n  In certain amount of duration, normal player gets card with clockwise order.\n  Dealer gets card lastly.\n  */\n     \n    \n  \n\n\n\n/*\n  Start dealing cards.\n  */\n\n  const startHandler=()=>{\n    setisDealerStart(true)\n  }\n\n  const nextPlayerHandler=()=>{\n    if (turnIndex<playerList.length-1){\n    const nextIndex=turnIndex+1\n    setTurnIndex(nextIndex)\n    }\n    else{\n      setIsDealerTurn(true)\n    }\n  }\n\n  const hitHandler= async (index)=>{\n    \n    const result=await playerHitCard()\n    const temp_playerList=playerList\n    const temp_cardList=temp_playerList[index].cardList\n    const handCardNum=temp_cardList.length\n    const handCard=await getHandCard()\n    const playerHand_index=handCard.playerHand\n    const playerHand=cardInterpreter(playerHand_index)\n    temp_playerList[index].cardList.push(playerHand[handCardNum])\n   \n    setPlayerList([...temp_playerList])\n    const gameStart_=await getGameStart()\n    const playerWin_=await getPlayerWin()\n    setGameStart(gameStart_)\n    setPlayerWin(playerWin_)\n\n  }\n\n  const playerStandHandler= async ()=>{\n    const result=await playerStand()\n    const temp_dealerCardList=dealerCardList\n    const oldHandCardNum=temp_dealerCardList.length\n    const handCard=await getHandCard()\n    const dealerHandCard_index=handCard.dealerHand\n    const dealerHandCard=cardInterpreter(dealerHandCard_index)\n    console.log(\"dealerhand: \",dealerHandCard)\n    const addedCardNum=dealerHandCard.length-oldHandCardNum\n    if(addedCardNum>0){\n      for (let i=0;i<addedCardNum;i++){\n        temp_dealerCardList.push(dealerHandCard[i+2])\n        console.log(temp_dealerCardList)\n        setDealerCardList([...temp_dealerCardList])\n        await wait(dealingInterval)\n\n      }\n    }\n    const gameStart_=await getGameStart()\n    const playerWin_=await getPlayerWin()\n\n    setGameStart(gameStart_)\n    setPlayerWin(playerWin_)\n\n    \n   \n  }\n\n\n \n  \n\n\n  \n\n  return (\n    <>\n    <section\n    style={\n      {\n        position:\"absolute\",\n        marginLeft:\"1800px\",\n        paddingTop:\"30px\",\n        paddingRight:\"30px\"\n\n      }\n    }\n    >\n     <StartDialog\n    startHandler={startHandler}\n    initializeContract={initializeContract}\n    isDealerStart={isDealerStart}\n    dealer={dealer}\n    player={player}\n    account={account}\n    joinGameHandler={joinGameHandler}\n    setStatusHandler={setStatusHandler}\n    startGameHandler={startGameHandler}\n    setHandHandler={setHandHandler}\n    \n    \n\n    />\n    <GameOverDialog\n    gameStart={gameStart}\n    bet={playerBal}\n    playerWin={playerWin}\n    />\n   \n   \n  \n   </section>\n    <div \n    className={styles.table}\n    style={{backgroundImage: `url(${backgroundImage})`}}\n    >\n   \n   \n    <Dealer\n    cardList={dealerCardList}\n    isDealerTurn={isDealerTurn}\n    isDealerAccount={isDealerAccount}\n    isPlayerAccount={isPlayerAccount}\n    />\n    \n    {playerList.map((player, index)=><Player\n      key={index}\n      playerIndex={index}\n      name={player.name}\n      isDealerAccount={isDealerAccount}\n      isPlayerAccount={isPlayerAccount}\n      bet={player.bet}\n      cardList={player.cardList}\n      whosTurn={turnIndex}\n      nextPlayerHandler={nextPlayerHandler}\n      hitHandler={hitHandler}\n      playerStandHandler={playerStandHandler}\n      />\n    )}\n    \n    </div>\n    </>\n  )\n}\n\nexport default App;\n","/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/reportWebVitals.js",[],"/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/data.js",["64"],"\nconst playerList=[]\n\nconst player1={\n    bet:10,\n    name:\"aaa\",\n    isMe:true,\n    cardList:[]\n  }\n  const player2={\n    bet:12,\n    name:\"bbb\",\n    isMe:false,\n    cardList:[]\n  }\n  const player3={\n    bet:5,\n    name:\"ccc\",\n    isMe:false,\n    cardList:[]\n  }\n  const player4={\n    bet:7,\n    name:\"ddd\",\n    isMe:false,\n    cardList:[]\n  }\n\n  playerList.push(player1)\n  playerList.push(player2)\n  playerList.push(player3) \n  //playerList.push(player4)\n\n  export default playerList",["65","66"],"/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/components/Players.jsx",[],"/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/components/Dealer.jsx",["67","68"],"import { React, useState, useEffect } from 'react';\nimport Card from \"./Cards\"\nimport styles from \"../style/player.module.css\";\n\nconst Dealer=({cardList,isDealerTurn,isDealerAccount,isPlayerAccount})=>{\n    \n\n    return(\n        <div className={styles.handContainer}>\n        <div className={styles.cardContainer} >\n          {cardList.map((card, index)=><Card \n          key={index}\n          index={index}\n          value={card.value}\n          type={card.type}\n          num={cardList.length}\n          isDealer={true}\n          isDealerAccount={isDealerAccount}\n          isPlayerAccount={isPlayerAccount}\n         />)}\n          \n        </div>\n        </div>\n    )\n}\nexport default Dealer","/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/components/StartDialog.jsx",["69","70","71"],"import { React, useState, useEffect } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n//import { getDealer } from '../Web3Client';\n\n\nconst StartDialog=({startHandler,initializeContract,dealer,account,player,joinGameHandler,setStatusHandler,startGameHandler,setHandHandler,isDealerStart})=>{\n\nconst [isOpen, setIsOpen] =useState(true);\nconst [isReady,setIsReady]=useState(false);\nconst [user,setUser]=useState(null)\nconst [isGO,setIsGo]=useState(null)\nconst nullPlayer=\"0x0000000000000000000000000000000000000000\";\n\n\nuseEffect(()=>{\n  if(account!==null&&dealer!==null){\n    if(account.toLowerCase()===dealer.toLowerCase()&&player!==nullPlayer){\n    setIsReady(true)\n    return}\n    \n  else{\n    setIsReady(false)\n  }\n  }\n  else{\n    setIsReady(false)\n  }\n  \n},[dealer,account,player,isDealerStart])\n\nuseEffect(()=>{\n  if(account!==null&&dealer!==null){\n  if(account.toLowerCase()===dealer.toLowerCase()){\n    if(player!==nullPlayer){\n      setUser(-1)\n      return\n    }\n    else{\n      setUser(0)\n    return\n    }\n    \n  }\n  if(account.toLowerCase()===player.toLowerCase()){\n    setUser(1)\n    return\n  }\n  else{\n    setUser(null)\n\n  }\n  \n}\n\n},[dealer,account,player])\n\nuseEffect(()=>{\n  if(isDealerStart=true){\n    setIsGo(true)\n  }\n},isDealerStart)\n\n\n\n\n\n  return (\n    <div>\n      <Dialog\n        open={isOpen}\n        onClose={()=>{setIsOpen(false)}}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {user===1&&(<Typography>{\"Welcome player\"}</Typography>)}\n          {user===0&&(<Typography>{\"Welcome dealer\"}</Typography>)}\n          {user===-1&&(<Typography>{\"Welcome dealer\"}</Typography>)}\n          {user===null&&(<Typography>{\"Welcome\"}</Typography>)}\n        </DialogTitle>\n        <DialogContent>\n          \n          <DialogContentText id=\"alert-dialog-description\" >\n           {user===null&&(<div><Typography>{`Dealer is ${dealer}`}</Typography><Typography>{`This is your current address: ${account}`}</Typography></div>)}\n            {user===0&&(<Typography>{\"Waiting for player joing game...\"}</Typography>)}\n            {user===1&&(<Typography>{\"Waiting for dealer starting game...\"}</Typography>)}\n            {user===-1&&(<Typography>{`Player ${player} is waiting...` }</Typography>)}\n\n            \n          </DialogContentText>\n         \n        </DialogContent>\n        <DialogActions>\n          {isReady&&<Button onClick={()=>\n          {\n            startGameHandler()\n            //startHandler()\n            setIsOpen(false)\n\n            }} >\n            start game\n          </Button>}\n          \n          {user==null&&<Button onClick={()=>\n          {\n            joinGameHandler()\n            }} autoFocus>\n            join\n          </Button>}\n          {isGO&&<Button onClick={()=>\n          {\n            setHandHandler()\n            //startHandler()\n            setIsOpen(false)\n\n            }} >\n            go\n          </Button>}\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\nexport default StartDialog","/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/components/Cards.jsx",[],"/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/components/PlayerStatus.jsx",[],"/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/Web3Client.js",[],"/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/components/GameOverDialog.jsx",["72","73","74"],"import { React, useState, useEffect } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nconst GameOverDialog=({gameStart,bet,playerWin})=>{\n\n    const [isWin,setIsWin]=useState(null)\n    const [isOpen, setIsOpen] =useState(false);\n\n    useEffect(()=>{\n        if(gameStart===false){\n            setIsOpen(true)\n            setIsWin(playerWin)\n        }\n\n    },[gameStart])\n\n\n    return (\n\n        <div>\n        <Dialog\n          open={isOpen}\n          onClose={()=>{setIsOpen(false)}}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {isWin?(<Typography>{\"Congrats player\"}</Typography>):(<Typography>{\"Game over\"}</Typography>)}\n            \n          </DialogTitle>\n          <DialogContent>\n            \n            <DialogContentText id=\"alert-dialog-description\" >\n             {isWin?(<Typography>{`You have won ${bet}!` }</Typography>):(<Typography>{`You have lost ${bet}!` }</Typography>)}\n  \n              \n            </DialogContentText>\n           \n          </DialogContent>\n          <DialogActions>\n            \n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n\n}\nexport default GameOverDialog;",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":8,"column":8,"nodeType":"81","messageId":"82","endLine":8,"endColumn":14},{"ruleId":"79","severity":1,"message":"83","line":22,"column":9,"nodeType":"81","messageId":"82","endLine":22,"endColumn":21},{"ruleId":"79","severity":1,"message":"84","line":95,"column":10,"nodeType":"81","messageId":"82","endLine":95,"endColumn":19},{"ruleId":"79","severity":1,"message":"85","line":101,"column":9,"nodeType":"81","messageId":"82","endLine":101,"endColumn":20},{"ruleId":"79","severity":1,"message":"86","line":112,"column":9,"nodeType":"81","messageId":"82","endLine":112,"endColumn":25},{"ruleId":"79","severity":1,"message":"87","line":118,"column":9,"nodeType":"81","messageId":"82","endLine":118,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":163,"column":3,"nodeType":"90","endLine":163,"endColumn":25,"suggestions":"91"},{"ruleId":"79","severity":1,"message":"92","line":279,"column":11,"nodeType":"81","messageId":"82","endLine":279,"endColumn":17},{"ruleId":"79","severity":1,"message":"92","line":297,"column":11,"nodeType":"81","messageId":"82","endLine":297,"endColumn":17},{"ruleId":"79","severity":1,"message":"93","line":22,"column":9,"nodeType":"81","messageId":"82","endLine":22,"endColumn":16},{"ruleId":"75","replacedBy":"94"},{"ruleId":"77","replacedBy":"95"},{"ruleId":"79","severity":1,"message":"96","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"97","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"98","line":8,"column":8,"nodeType":"81","messageId":"82","endLine":8,"endColumn":17},{"ruleId":"99","severity":1,"message":"100","line":65,"column":6,"nodeType":"101","messageId":"102","endLine":65,"endColumn":24},{"ruleId":"88","severity":1,"message":"103","line":65,"column":20,"nodeType":"104","endLine":65,"endColumn":24},{"ruleId":"79","severity":1,"message":"80","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":14},{"ruleId":"79","severity":1,"message":"98","line":8,"column":8,"nodeType":"81","messageId":"82","endLine":8,"endColumn":17},{"ruleId":"88","severity":1,"message":"105","line":22,"column":7,"nodeType":"90","endLine":22,"endColumn":18,"suggestions":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'PROVIDER_URL' is assigned a value but never used.","'dealerBal' is assigned a value but never used.","'contractBal' is assigned a value but never used.","'initialCardCount' is assigned a value but never used.","'deck' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setHandHandler'. Either include it or remove the dependency array.","ArrayExpression",["109"],"'result' is assigned a value but never used.","'player4' is assigned a value but never used.",["107"],["108"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'TextField' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","Assignments to the 'isDealerStart' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has a missing dependency: 'playerWin'. Either include it or remove the dependency array. If 'setIsWin' needs the current value of 'playerWin', you can also switch to useReducer instead of useState and read 'playerWin' in the reducer.",["110"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [isDealerStart, player, setHandHandler]",{"range":"115","text":"116"},"Update the dependencies array to be: [gameStart, playerWin]",{"range":"117","text":"118"},[4011,4033],"[isDealerStart, player, setHandHandler]",[743,754],"[gameStart, playerWin]"]