{"ast":null,"code":"var _jsxFileName = \"/Users/tedwu/Desktop/blackjack/blackjack/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport Dealer from './components/Dealer';\nimport Player from './components/Players';\nimport styles from \"../src/style/table.module.css\";\nimport backgroundImage from \"./table_background.jpeg\"; //import ReactDOM from 'react-dom';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const deck = [];\n  const playerList = [];\n  const dealingInterval = 2000;\n  const [isRoundStarted, setIsRoundStarted] = useState(true);\n  useEffect(() => {\n    const initializeplayer = () => {\n      const player1 = {\n        bet: 10,\n        name: \"aaa\",\n        isMe: true,\n        cardList: [{\n          value: \"3\",\n          type: \"H\"\n        }]\n      };\n      const player2 = {\n        bet: 12,\n        name: \"bbb\",\n        isMe: false,\n        cardList: [{\n          value: \"3\",\n          type: \"H\"\n        }]\n      };\n      const player3 = {\n        bet: 5,\n        name: \"ccc\",\n        isMe: false,\n        cardList: [{\n          value: \"3\",\n          type: \"H\"\n        }]\n      };\n      const player4 = {\n        bet: 7,\n        name: \"ddd\",\n        isMe: false,\n        cardList: [{\n          value: \"3\",\n          type: \"H\"\n        }]\n      };\n      playerList.push(player1);\n      playerList.push(player2);\n      playerList.push(player3);\n      playerList.push(player4);\n    };\n\n    try {\n      deckBuilder();\n      initializeplayer();\n      console.log(\"use effect\", playerList);\n    } catch (err) {\n      console.log(err);\n    }\n  });\n\n  const deckBuilder = () => {\n    const values = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\n    const types = [\"C\", \"D\", \"H\", \"S\"];\n\n    for (let i = 0; i < types.length; i++) {\n      for (let j = 0; j < values.length; j++) {\n        deck.push({\n          value: values[j],\n          type: types[i]\n        });\n      }\n    }\n\n    reshuffle(deck);\n  };\n\n  const reshuffle = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  const dealing = player => {\n    player.cardList.push(deck.pop());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.table,\n      style: {\n        backgroundImage: `url(${backgroundImage})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(Dealer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this), console.log(\"pre player render\", playerList), playerList.map((player, index) => /*#__PURE__*/_jsxDEV(Player, {\n        playerIndex: index,\n        name: player.name,\n        isMe: player.isMe,\n        bet: player.bet,\n        cardList: player.cardList\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 38\n      }, this)), console.log(\"after player render\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"RAFI04tmjKQ+88FkD2ZXgkqUh8g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Dealer","Player","styles","backgroundImage","App","deck","playerList","dealingInterval","isRoundStarted","setIsRoundStarted","initializeplayer","player1","bet","name","isMe","cardList","value","type","player2","player3","player4","push","deckBuilder","console","log","err","values","types","i","length","j","reshuffle","array","Math","floor","random","temp","dealing","player","pop","table","map","index"],"sources":["/Users/tedwu/Desktop/blackjack/blackjack/src/App.js"],"sourcesContent":["\nimport { React, useState, useEffect } from 'react';\nimport Dealer from './components/Dealer';\nimport Player from './components/Players';\nimport styles from \"../src/style/table.module.css\"\nimport backgroundImage from \"./table_background.jpeg\"\n\n//import ReactDOM from 'react-dom';\n\n\n\nconst App=()=> {\n  const deck=[]\n  const playerList=[]\n  const dealingInterval=2000;\n  \n  const [isRoundStarted,setIsRoundStarted]=useState(true)\n\n\n  useEffect(()=>{\n    const initializeplayer=()=>{\n      const player1={\n        bet:10,\n        name:\"aaa\",\n        isMe:true,\n        cardList:[{value:\"3\"\n        ,type:\"H\"}]\n      }\n      const player2={\n        bet:12,\n        name:\"bbb\",\n        isMe:false,\n        cardList:[\n          {value:\"3\"\n        ,type:\"H\"}]\n      }\n      const player3={\n        bet:5,\n        name:\"ccc\",\n        isMe:false,\n        cardList:[{value:\"3\"\n        ,type:\"H\"}]\n      }\n      const player4={\n        bet:7,\n        name:\"ddd\",\n        isMe:false,\n        cardList:[{value:\"3\"\n        ,type:\"H\"}]\n      }\n      playerList.push(player1)\n      playerList.push(player2)\n      playerList.push(player3)\n      playerList.push(player4)\n    \n      }\n    \n     \n    try{\n      deckBuilder();\n      initializeplayer();\n      console.log(\"use effect\",playerList)\n      \n\n    }catch(err){\n      console.log(err)\n    }\n\n  },)\n  \n  const deckBuilder=()=>{\n   \n   const values = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\n   const types = [\"C\", \"D\", \"H\", \"S\"];\n   \n   for (let i=0;i<types.length;i++ ){\n     for(let j=0;j<values.length;j++){\n       deck.push({value:values[j],\n                  type:types[i]})\n     }\n   }\n   reshuffle(deck)\n  }\n\n  const reshuffle=(array)=>{\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n  }\n  \n  }\n  const dealing=(player)=>{\n    player.cardList.push(deck.pop())\n  }\n\n  \n\n\n  \n\n  return (\n    <>\n    <div \n    className={styles.table}\n    style={{backgroundImage: `url(${backgroundImage})`}}\n    >\n    <Dealer/>\n    {console.log(\"pre player render\",playerList)}\n    {playerList.map((player, index)=><Player\n      key={index}\n      playerIndex={index}\n      name={player.name}\n      isMe={player.isMe}\n      bet={player.bet}\n      cardList={player.cardList}/>\n    )}\n    {console.log(\"after player render\")}\n    </div>\n   \n    </>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}