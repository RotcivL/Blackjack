{"ast":null,"code":"var _jsxFileName = \"/Users/tedwu/Desktop/blackjack/blackjack/src/components/PlayerStatus.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport styles from \"../style/timer.module.css\";\nimport Avatar from '@mui/material/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlayerStatus = _ref => {\n  _s();\n\n  let {\n    playerPosition,\n    playerName,\n    isStartCount,\n    nextPlayerHandler\n  } = _ref;\n  const [isCount, setIsCount] = useState(false);\n  useEffect(() => {\n    if (isStartCount === true) {\n      setIsCount(true);\n    }\n  }, [isStartCount]);\n\n  const abbreviationAvatar = playerName => {\n    return {\n      sx: {\n        bgcolor: \"#8c9eff\"\n      },\n      children: playerName[0].toUpperCase()\n    };\n  }; //console.log(abbreviationAvatar(playerName))\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[playerPosition],\n    children: [console.log(isCount), /*#__PURE__*/_jsxDEV(CountdownCircleTimer, {\n      onComplete: () => {\n        setIsCount(false);\n        nextPlayerHandler();\n      },\n      isPlaying: isCount,\n      strokeWidth: 3,\n      duration: 15,\n      size: 46,\n      colors: [\"#004777\", \"#F7B801\", \"#A30000\", \"#A30000\"],\n      colorsTime: [10, 6, 3, 0],\n      children: () => /*#__PURE__*/_jsxDEV(Avatar, { ...abbreviationAvatar(playerName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"hit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        nextPlayerHandler();\n        setIsCount;\n      },\n      children: \"stay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlayerStatus, \"a64e9JQ2NcmjC0kd4Wf0LNL/Gqo=\");\n\n_c = PlayerStatus;\nexport default PlayerStatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerStatus\");","map":{"version":3,"names":["React","useState","useEffect","CountdownCircleTimer","styles","Avatar","PlayerStatus","playerPosition","playerName","isStartCount","nextPlayerHandler","isCount","setIsCount","abbreviationAvatar","sx","bgcolor","children","toUpperCase","console","log"],"sources":["/Users/tedwu/Desktop/blackjack/blackjack/src/components/PlayerStatus.jsx"],"sourcesContent":["import { React, useState, useEffect } from 'react';\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport styles from \"../style/timer.module.css\";\nimport Avatar from '@mui/material/Avatar';\n\nconst PlayerStatus=({playerPosition, playerName, isStartCount, nextPlayerHandler})=>{\n\n    const[isCount,setIsCount]=useState(false)\n\n    useEffect(()=>{\n        if(isStartCount===true){\n            setIsCount(true)\n        }\n        \n\n    },[isStartCount])\n\n    const abbreviationAvatar=(playerName)=>{\n        return {sx: {\n            bgcolor: \"#8c9eff\",\n          },\n          children: playerName[0].toUpperCase(),\n        };\n            \n            \n    }\n    //console.log(abbreviationAvatar(playerName))\n\n\n\n    return (\n    <div className={styles[playerPosition]}> \n    {console.log(isCount)}\n    <CountdownCircleTimer\n    onComplete={\n        ()=>{\n            setIsCount(false)\n            nextPlayerHandler()\n        }\n    }\n    isPlaying={isCount}\n    strokeWidth={3}\n    duration={15}\n    size={46}\n    colors={[\"#004777\", \"#F7B801\", \"#A30000\", \"#A30000\"]}\n    colorsTime={[10, 6, 3, 0]}>\n        {()=><Avatar{...abbreviationAvatar(playerName)}/>}\n    </CountdownCircleTimer>\n    <button>{\"hit\"}</button>\n    <button onClick={\n       ()=>{\n           nextPlayerHandler()\n        setIsCount}\n\n    }>{\"stay\"}</button>\n    </div>\n\n)\n\n}\nexport default PlayerStatus"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,oBAAT,QAAqC,8BAArC;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,YAAY,GAAC,QAAiE;EAAA;;EAAA,IAAhE;IAACC,cAAD;IAAiBC,UAAjB;IAA6BC,YAA7B;IAA2CC;EAA3C,CAAgE;EAEhF,MAAK,CAACC,OAAD,EAASC,UAAT,IAAqBX,QAAQ,CAAC,KAAD,CAAlC;EAEAC,SAAS,CAAC,MAAI;IACV,IAAGO,YAAY,KAAG,IAAlB,EAAuB;MACnBG,UAAU,CAAC,IAAD,CAAV;IACH;EAGJ,CANQ,EAMP,CAACH,YAAD,CANO,CAAT;;EAQA,MAAMI,kBAAkB,GAAEL,UAAD,IAAc;IACnC,OAAO;MAACM,EAAE,EAAE;QACRC,OAAO,EAAE;MADD,CAAL;MAGLC,QAAQ,EAAER,UAAU,CAAC,CAAD,CAAV,CAAcS,WAAd;IAHL,CAAP;EAOH,CARD,CAZgF,CAqBhF;;;EAIA,oBACA;IAAK,SAAS,EAAEb,MAAM,CAACG,cAAD,CAAtB;IAAA,WACCW,OAAO,CAACC,GAAR,CAAYR,OAAZ,CADD,eAEA,QAAC,oBAAD;MACA,UAAU,EACN,MAAI;QACAC,UAAU,CAAC,KAAD,CAAV;QACAF,iBAAiB;MACpB,CALL;MAOA,SAAS,EAAEC,OAPX;MAQA,WAAW,EAAE,CARb;MASA,QAAQ,EAAE,EATV;MAUA,IAAI,EAAE,EAVN;MAWA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAXR;MAYA,UAAU,EAAE,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,CAZZ;MAAA,UAaK,mBAAI,QAAC,MAAD,OAAWE,kBAAkB,CAACL,UAAD;MAA7B;QAAA;QAAA;QAAA;MAAA;IAbT;MAAA;MAAA;MAAA;IAAA,QAFA,eAiBA;MAAA,UAAS;IAAT;MAAA;MAAA;MAAA;IAAA,QAjBA,eAkBA;MAAQ,OAAO,EACZ,MAAI;QACAE,iBAAiB;QACpBE,UAAU;MAAC,CAHf;MAAA,UAKG;IALH;MAAA;MAAA;MAAA;IAAA,QAlBA;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AA6BH,CAtDD;;GAAMN,Y;;KAAAA,Y;AAuDN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}