{"ast":null,"code":"import Web3 from \"web3\";\nimport BlackJackContractBuild from \"contracts/BlackJackV2.json\"; //let BlackJackContract;\n\nlet isInitial = false;\nlet BlackJackContract; //const PROVIDER_URL='http://localhost:3000'\n\nexport const initializeContract = async () => {\n  let provider = window.ethereum;\n  const web3 = new Web3(provider);\n  const networkID = await web3.eth.net.getId();\n  const contractAddress = BlackJackContractBuild.networks[networkID].address;\n  BlackJackContract = new web3.eth.Contract(BlackJackContractBuild.abi, contractAddress); //const account= await BlackJackContract.methods.getDealer().call()\n\n  const accounts = await web3.eth.getAccounts(); //const dealer= await BlackJackContract.methods.dealer().call()\n  //const balance=await web3.eth.getBalance(contractAddress)\n};\nexport const joinGame = () => {\n  if (isInitial) {\n    deploy();\n  } else {\n    BlackJackContract.methods.joinGame().send({\n      from: accounts[0],\n      value: 10\n    });\n  }\n};","map":{"version":3,"names":["Web3","BlackJackContractBuild","isInitial","BlackJackContract","initializeContract","provider","window","ethereum","web3","networkID","eth","net","getId","contractAddress","networks","address","Contract","abi","accounts","getAccounts","joinGame","deploy","methods","send","from","value"],"sources":["/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/Web3Client.js"],"sourcesContent":["import Web3 from \"web3\"\nimport BlackJackContractBuild from \"contracts/BlackJackV2.json\"\n\n//let BlackJackContract;\nlet isInitial=false;\nlet BlackJackContract;\n//const PROVIDER_URL='http://localhost:3000'\n\nexport const initializeContract= async ()=>{\n\nlet provider = window.ethereum \nconst web3 =new Web3(provider)\nconst networkID= await web3.eth.net.getId()\nconst contractAddress=BlackJackContractBuild.networks[networkID].address \nBlackJackContract= new web3.eth.Contract(BlackJackContractBuild.abi,contractAddress)\n//const account= await BlackJackContract.methods.getDealer().call()\nconst accounts = await web3.eth.getAccounts();\n//const dealer= await BlackJackContract.methods.dealer().call()\n//const balance=await web3.eth.getBalance(contractAddress)\n\n} \n\n\n\nexport const joinGame=()=>{\n    if(isInitial){\n        deploy();\n    }\n    else{\n        BlackJackContract.methods.joinGame().send({from:accounts[0],value:10})\n    }\n    \n\n}\n\n\n\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,sBAAP,MAAmC,4BAAnC,C,CAEA;;AACA,IAAIC,SAAS,GAAC,KAAd;AACA,IAAIC,iBAAJ,C,CACA;;AAEA,OAAO,MAAMC,kBAAkB,GAAE,YAAU;EAE3C,IAAIC,QAAQ,GAAGC,MAAM,CAACC,QAAtB;EACA,MAAMC,IAAI,GAAE,IAAIR,IAAJ,CAASK,QAAT,CAAZ;EACA,MAAMI,SAAS,GAAE,MAAMD,IAAI,CAACE,GAAL,CAASC,GAAT,CAAaC,KAAb,EAAvB;EACA,MAAMC,eAAe,GAACZ,sBAAsB,CAACa,QAAvB,CAAgCL,SAAhC,EAA2CM,OAAjE;EACAZ,iBAAiB,GAAE,IAAIK,IAAI,CAACE,GAAL,CAASM,QAAb,CAAsBf,sBAAsB,CAACgB,GAA7C,EAAiDJ,eAAjD,CAAnB,CAN2C,CAO3C;;EACA,MAAMK,QAAQ,GAAG,MAAMV,IAAI,CAACE,GAAL,CAASS,WAAT,EAAvB,CAR2C,CAS3C;EACA;AAEC,CAZM;AAgBP,OAAO,MAAMC,QAAQ,GAAC,MAAI;EACtB,IAAGlB,SAAH,EAAa;IACTmB,MAAM;EACT,CAFD,MAGI;IACAlB,iBAAiB,CAACmB,OAAlB,CAA0BF,QAA1B,GAAqCG,IAArC,CAA0C;MAACC,IAAI,EAACN,QAAQ,CAAC,CAAD,CAAd;MAAkBO,KAAK,EAAC;IAAxB,CAA1C;EACH;AAGJ,CATM"},"metadata":{},"sourceType":"module"}