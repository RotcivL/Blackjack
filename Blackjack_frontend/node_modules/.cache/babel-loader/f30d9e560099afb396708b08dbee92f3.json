{"ast":null,"code":"var _jsxFileName = \"/Users/tedwu/Desktop/\\u672A\\u547D\\u540D\\u6A94\\u6848\\u593E 4/Blackjack/Blackjack_frontend/src/components/PlayerStatus.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport styles from \"../style/timer.module.css\";\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlayerStatus = _ref => {\n  _s();\n\n  let {\n    playerPosition,\n    playerName,\n    isStartCount,\n    nextPlayerHandler,\n    hitHandler,\n    playerIndex,\n    playerStandHandler,\n    isPlayerAccount\n  } = _ref;\n  const [isCount, setIsCount] = useState(false);\n  const [key, setKey] = useState('0');\n  const [duration] = useState(200);\n  useEffect(() => {\n    if (isStartCount === true) {\n      setIsCount(true);\n    }\n  }, [isStartCount]);\n\n  const abbreviationAvatar = playerName => {\n    return {\n      sx: {\n        bgcolor: \"#8c9eff\"\n      },\n      children: playerName[0].toUpperCase()\n    };\n  }; //console.log(abbreviationAvatar(playerName))\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[playerPosition],\n    children: [/*#__PURE__*/_jsxDEV(CountdownCircleTimer, {\n      onComplete: () => {\n        setIsCount(false);\n        nextPlayerHandler();\n      },\n      isPlaying: isCount,\n      strokeWidth: 3,\n      duration: duration,\n      size: 46,\n      colors: [\"#004777\", \"#F7B801\", \"#A30000\", \"#A30000\"],\n      colorsTime: [15, 10, 5, 0],\n      children: () => /*#__PURE__*/_jsxDEV(Avatar, { ...abbreviationAvatar(playerName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 24\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          hitHandler(playerIndex);\n          setKey(preKey => preKey + 1);\n        },\n        disabled: !isCount,\n        children: \"hit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          playerStandHandler();\n          nextPlayerHandler();\n          setKey(preKey => preKey + 1);\n          setIsCount(false);\n        },\n        disabled: !isCount,\n        children: \"stand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PlayerStatus, \"xQ0WKXu+fbrQegrPYEipqaS8CNg=\");\n\n_c = PlayerStatus;\nexport default PlayerStatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerStatus\");","map":{"version":3,"names":["React","useState","useEffect","CountdownCircleTimer","styles","Avatar","Button","PlayerStatus","playerPosition","playerName","isStartCount","nextPlayerHandler","hitHandler","playerIndex","playerStandHandler","isPlayerAccount","isCount","setIsCount","key","setKey","duration","abbreviationAvatar","sx","bgcolor","children","toUpperCase","preKey"],"sources":["/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/components/PlayerStatus.jsx"],"sourcesContent":["import { React, useState, useEffect } from 'react';\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport styles from \"../style/timer.module.css\";\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\n\nconst PlayerStatus = ({ playerPosition, playerName, isStartCount, nextPlayerHandler, hitHandler, playerIndex, playerStandHandler,isPlayerAccount }) => {\n\n    const [isCount, setIsCount] = useState(false)\n    const [key, setKey] = useState('0')\n    const [duration,] = useState(200)\n\n    useEffect(() => {\n        if (isStartCount === true) {\n            setIsCount(true)\n        }\n\n\n    }, [isStartCount])\n\n    const abbreviationAvatar = (playerName) => {\n        return {\n            sx: {\n                bgcolor: \"#8c9eff\",\n            },\n            children: playerName[0].toUpperCase(),\n        };\n\n\n    }\n    //console.log(abbreviationAvatar(playerName))\n\n\n\n    return (\n        <div className={styles[playerPosition]}>\n\n            <CountdownCircleTimer\n                onComplete={\n                    () => {\n                        setIsCount(false)\n                        nextPlayerHandler()\n                    }\n                }\n                key={key}\n                isPlaying={isCount}\n                strokeWidth={3}\n                duration={duration}\n                size={46}\n                colors={[\"#004777\", \"#F7B801\", \"#A30000\", \"#A30000\"]}\n                colorsTime={[15, 10, 5, 0]}>\n                {() => <Avatar{...abbreviationAvatar(playerName)} />}\n            </CountdownCircleTimer>\n            {\n            <div><Button onClick={() => {\n                hitHandler(playerIndex)\n                setKey((preKey) => preKey + 1)\n            }}\n                disabled={!isCount}\n            >{\"hit\"}</Button>\n\n            <Button onClick={() => {\n                playerStandHandler()\n                nextPlayerHandler()\n                setKey((preKey) => preKey + 1)\n                setIsCount(false)\n            }}\n                disabled={!isCount}\n            >{\"stand\"}</Button></div>}\n        </div>\n\n    )\n\n}\nexport default PlayerStatus"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,oBAAT,QAAqC,8BAArC;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,YAAY,GAAG,QAAkI;EAAA;;EAAA,IAAjI;IAAEC,cAAF;IAAkBC,UAAlB;IAA8BC,YAA9B;IAA4CC,iBAA5C;IAA+DC,UAA/D;IAA2EC,WAA3E;IAAwFC,kBAAxF;IAA2GC;EAA3G,CAAiI;EAEnJ,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACiB,GAAD,EAAMC,MAAN,IAAgBlB,QAAQ,CAAC,GAAD,CAA9B;EACA,MAAM,CAACmB,QAAD,IAAcnB,QAAQ,CAAC,GAAD,CAA5B;EAEAC,SAAS,CAAC,MAAM;IACZ,IAAIQ,YAAY,KAAK,IAArB,EAA2B;MACvBO,UAAU,CAAC,IAAD,CAAV;IACH;EAGJ,CANQ,EAMN,CAACP,YAAD,CANM,CAAT;;EAQA,MAAMW,kBAAkB,GAAIZ,UAAD,IAAgB;IACvC,OAAO;MACHa,EAAE,EAAE;QACAC,OAAO,EAAE;MADT,CADD;MAIHC,QAAQ,EAAEf,UAAU,CAAC,CAAD,CAAV,CAAcgB,WAAd;IAJP,CAAP;EAQH,CATD,CAdmJ,CAwBnJ;;;EAIA,oBACI;IAAK,SAAS,EAAErB,MAAM,CAACI,cAAD,CAAtB;IAAA,wBAEI,QAAC,oBAAD;MACI,UAAU,EACN,MAAM;QACFS,UAAU,CAAC,KAAD,CAAV;QACAN,iBAAiB;MACpB,CALT;MAQI,SAAS,EAAEK,OARf;MASI,WAAW,EAAE,CATjB;MAUI,QAAQ,EAAEI,QAVd;MAWI,IAAI,EAAE,EAXV;MAYI,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAZZ;MAaI,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,CAbhB;MAAA,UAcK,mBAAM,QAAC,MAAD,OAAWC,kBAAkB,CAACZ,UAAD;MAA7B;QAAA;QAAA;QAAA;MAAA;IAdX,GAOSS,GAPT;MAAA;MAAA;MAAA;IAAA,QAFJ,eAmBI;MAAA,wBAAK,QAAC,MAAD;QAAQ,OAAO,EAAE,MAAM;UACxBN,UAAU,CAACC,WAAD,CAAV;UACAM,MAAM,CAAEO,MAAD,IAAYA,MAAM,GAAG,CAAtB,CAAN;QACH,CAHI;QAID,QAAQ,EAAE,CAACV,OAJV;QAAA,UAKH;MALG;QAAA;QAAA;QAAA;MAAA,QAAL,eAOA,QAAC,MAAD;QAAQ,OAAO,EAAE,MAAM;UACnBF,kBAAkB;UAClBH,iBAAiB;UACjBQ,MAAM,CAAEO,MAAD,IAAYA,MAAM,GAAG,CAAtB,CAAN;UACAT,UAAU,CAAC,KAAD,CAAV;QACH,CALD;QAMI,QAAQ,EAAE,CAACD,OANf;QAAA,UAOE;MAPF;QAAA;QAAA;QAAA;MAAA,QAPA;IAAA;MAAA;MAAA;MAAA;IAAA,QAnBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAuCH,CAnED;;GAAMT,Y;;KAAAA,Y;AAoEN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}