{"ast":null,"code":"import Web3 from \"web3\";\nimport BlackJackContractBuild from \"contracts/BlackJackV2.json\"; //let BlackJackContract;\n\nlet isInitial = false;\nlet BlackJackContract;\nlet D;\nlet dealerBal;\nlet accounts;\nlet player;\nlet playerBal; //const PROVIDER_URL='http://localhost:3000'\n\nexport const initializeContract = async () => {\n  let provider = window.ethereum;\n  const web3 = new Web3(provider);\n  const networkID = await web3.eth.net.getId();\n  const contractAddress = BlackJackContractBuild.networks[networkID].address;\n  BlackJackContract = new web3.eth.Contract(BlackJackContractBuild.abi, contractAddress); //const account= await BlackJackContract.methods.getDealer().call()\n\n  accounts = await web3.eth.getAccounts();\n  isInitial = true;\n  dealerBal = await BlackJackContract.methods.dealerBalance().call();\n  const maxb = await BlackJackContract.methods.maxBet().call(); //const join=await BlackJackContract.methods.joinGame().send({from:accounts[0],value:10})\n  //data= await web3.eth.getCode(contractAddress)\n  //const deploy= await  BlackJackContract.deploy({data:data,arguments: [10, 1000]})\n\n  console.log(dealerBal);\n  console.log(maxb); //const dealer= await BlackJackContract.methods.dealer().call()\n  //const balance=await web3.eth.getBalance(contractAddress)\n};\nexport const joinGame = async () => {\n  if (!isInitial) {\n    await initializeContract();\n  }\n\n  return BlackJackContract.methods.joinGame().send({\n    from: accounts[0],\n    value: 10\n  });\n};\nexport const getDealer = async () => {\n  if (!isInitial) {\n    await initializeContract();\n  }\n\n  return BlackJackContract.methods.dealer().call();\n};","map":{"version":3,"names":["Web3","BlackJackContractBuild","isInitial","BlackJackContract","D","dealerBal","accounts","player","playerBal","initializeContract","provider","window","ethereum","web3","networkID","eth","net","getId","contractAddress","networks","address","Contract","abi","getAccounts","methods","dealerBalance","call","maxb","maxBet","console","log","joinGame","send","from","value","getDealer","dealer"],"sources":["/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/Web3Client.js"],"sourcesContent":["import Web3 from \"web3\"\nimport BlackJackContractBuild from \"contracts/BlackJackV2.json\"\n\n//let BlackJackContract;\nlet isInitial=false;\n\nlet BlackJackContract;\nlet D\nlet dealerBal;\nlet accounts;\nlet player;\nlet playerBal;\n//const PROVIDER_URL='http://localhost:3000'\n\nexport const initializeContract= async ()=>{\n\nlet provider = window.ethereum \nconst web3 =new Web3(provider)\nconst networkID= await web3.eth.net.getId()\nconst contractAddress=BlackJackContractBuild.networks[networkID].address \nBlackJackContract= new web3.eth.Contract(BlackJackContractBuild.abi,contractAddress)\n//const account= await BlackJackContract.methods.getDealer().call()\naccounts = await web3.eth.getAccounts();\nisInitial=true\ndealerBal= await BlackJackContract.methods.dealerBalance().call()\nconst maxb=await BlackJackContract.methods.maxBet().call()\n//const join=await BlackJackContract.methods.joinGame().send({from:accounts[0],value:10})\n//data= await web3.eth.getCode(contractAddress)\n//const deploy= await  BlackJackContract.deploy({data:data,arguments: [10, 1000]})\nconsole.log(dealerBal)\nconsole.log(maxb)\n//const dealer= await BlackJackContract.methods.dealer().call()\n//const balance=await web3.eth.getBalance(contractAddress)\n\n} \n\n\n\nexport const joinGame= async ()=>{\n    if(!isInitial){\n        await initializeContract();}\n   \n        return BlackJackContract.methods.joinGame().send({from:accounts[0],value:10})\n    }\n    \n\n\n\nexport const getDealer= async ()=>{\n    if(!isInitial){\n        await initializeContract();\n    }\n        return BlackJackContract.methods.dealer().call()\n    }\n    \n\n\n\n\n\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,sBAAP,MAAmC,4BAAnC,C,CAEA;;AACA,IAAIC,SAAS,GAAC,KAAd;AAEA,IAAIC,iBAAJ;AACA,IAAIC,CAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,MAAJ;AACA,IAAIC,SAAJ,C,CACA;;AAEA,OAAO,MAAMC,kBAAkB,GAAE,YAAU;EAE3C,IAAIC,QAAQ,GAAGC,MAAM,CAACC,QAAtB;EACA,MAAMC,IAAI,GAAE,IAAIb,IAAJ,CAASU,QAAT,CAAZ;EACA,MAAMI,SAAS,GAAE,MAAMD,IAAI,CAACE,GAAL,CAASC,GAAT,CAAaC,KAAb,EAAvB;EACA,MAAMC,eAAe,GAACjB,sBAAsB,CAACkB,QAAvB,CAAgCL,SAAhC,EAA2CM,OAAjE;EACAjB,iBAAiB,GAAE,IAAIU,IAAI,CAACE,GAAL,CAASM,QAAb,CAAsBpB,sBAAsB,CAACqB,GAA7C,EAAiDJ,eAAjD,CAAnB,CAN2C,CAO3C;;EACAZ,QAAQ,GAAG,MAAMO,IAAI,CAACE,GAAL,CAASQ,WAAT,EAAjB;EACArB,SAAS,GAAC,IAAV;EACAG,SAAS,GAAE,MAAMF,iBAAiB,CAACqB,OAAlB,CAA0BC,aAA1B,GAA0CC,IAA1C,EAAjB;EACA,MAAMC,IAAI,GAAC,MAAMxB,iBAAiB,CAACqB,OAAlB,CAA0BI,MAA1B,GAAmCF,IAAnC,EAAjB,CAX2C,CAY3C;EACA;EACA;;EACAG,OAAO,CAACC,GAAR,CAAYzB,SAAZ;EACAwB,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAhB2C,CAiB3C;EACA;AAEC,CApBM;AAwBP,OAAO,MAAMI,QAAQ,GAAE,YAAU;EAC7B,IAAG,CAAC7B,SAAJ,EAAc;IACV,MAAMO,kBAAkB,EAAxB;EAA4B;;EAE5B,OAAON,iBAAiB,CAACqB,OAAlB,CAA0BO,QAA1B,GAAqCC,IAArC,CAA0C;IAACC,IAAI,EAAC3B,QAAQ,CAAC,CAAD,CAAd;IAAkB4B,KAAK,EAAC;EAAxB,CAA1C,CAAP;AACH,CALE;AAUP,OAAO,MAAMC,SAAS,GAAE,YAAU;EAC9B,IAAG,CAACjC,SAAJ,EAAc;IACV,MAAMO,kBAAkB,EAAxB;EACH;;EACG,OAAON,iBAAiB,CAACqB,OAAlB,CAA0BY,MAA1B,GAAmCV,IAAnC,EAAP;AACH,CALE"},"metadata":{},"sourceType":"module"}