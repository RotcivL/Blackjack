{"ast":null,"code":"var _jsxFileName = \"/Users/tedwu/Desktop/blackjack/blackjack/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport Dealer from './components/Dealer';\nimport Player from './components/Players';\nimport styles from \"../src/style/table.module.css\";\nimport backgroundImage from \"./table_background.jpeg\"; //import ReactDOM from 'react-dom';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const deckBuilder = () => {\n    const temp_deck = [];\n    const values = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\n    const types = [\"C\", \"D\", \"H\", \"S\"];\n\n    for (let i = 0; i < types.length; i++) {\n      for (let j = 0; j < values.length; j++) {\n        temp_deck.push({\n          value: values[j],\n          type: types[i]\n        });\n      }\n    }\n\n    return reshuffle(temp_deck);\n  };\n\n  const reshuffle = temp_deck => {\n    for (let i = temp_deck.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = temp_deck[i];\n      temp_deck[i] = temp_deck[j];\n      temp_deck[j] = temp;\n    }\n\n    return temp_deck;\n  };\n\n  const dealingInterval = 2000;\n  const [isRoundStarted, setIsRoundStarted] = useState(true);\n  const [playerList, setPlayerList] = useState([]);\n  const [deck, setDeck] = useState(deckBuilder());\n  useEffect(() => {\n    const fetchPlayer = async () => {\n      try {\n        const res = await import(\"./data\");\n        setPlayerList(res.default);\n        dealing();\n      } catch (err) {\n        console.log(\"err: \", err);\n      }\n    };\n\n    fetchPlayer();\n  }, [isRoundStarted]);\n\n  const dealing = playerList => {\n    const temp_playerList = { ...playerList\n    };\n\n    for (let i = 0; i < temp_playerList.length; i++) {\n      temp_playerList[i].cardList.push(deck.pop());\n    }\n\n    setPlayerList(temp_playerList);\n    console.log(\"dealing called\", playerList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(playerList), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.table,\n      style: {\n        backgroundImage: `url(${backgroundImage})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(Dealer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), playerList.map((player, index) => /*#__PURE__*/_jsxDEV(Player, {\n        playerIndex: index,\n        name: player.name,\n        isMe: player.isMe,\n        bet: player.bet,\n        cardList: player.cardList\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 38\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"MXq2et8YU7tZSR+LmfqkY4mgmQ8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Dealer","Player","styles","backgroundImage","App","deckBuilder","temp_deck","values","types","i","length","j","push","value","type","reshuffle","Math","floor","random","temp","dealingInterval","isRoundStarted","setIsRoundStarted","playerList","setPlayerList","deck","setDeck","fetchPlayer","res","default","dealing","err","console","log","temp_playerList","cardList","pop","table","map","player","index","name","isMe","bet"],"sources":["/Users/tedwu/Desktop/blackjack/blackjack/src/App.js"],"sourcesContent":["\nimport { React, useState, useEffect } from 'react';\nimport Dealer from './components/Dealer';\nimport Player from './components/Players';\nimport styles from \"../src/style/table.module.css\"\nimport backgroundImage from \"./table_background.jpeg\"\n\n//import ReactDOM from 'react-dom';\n\n\n\nconst App=()=> {\n  const deckBuilder=()=>{\n    const temp_deck=[]\n    const values = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\n    const types = [\"C\", \"D\", \"H\", \"S\"];\n   \n    \n    for (let i=0;i<types.length;i++ ){\n      for(let j=0;j<values.length;j++){\n       temp_deck.push({value:values[j],\n                   type:types[i]})\n      }\n    }\n    return reshuffle(temp_deck)\n   }\n \n   const reshuffle=(temp_deck)=>{\n     for (let i = temp_deck.length - 1; i > 0; i--) {\n       let j = Math.floor(Math.random() * (i + 1));\n       let temp = temp_deck[i];\n       temp_deck[i] = temp_deck[j];\n       temp_deck[j] = temp;\n   }\n   return temp_deck\n  \n   \n   }\n \n\n  const dealingInterval=2000;\n  \n  const [isRoundStarted,setIsRoundStarted]=useState(true)\n\n  const[playerList,setPlayerList]=useState([])\n  \n  const[deck,setDeck]=useState(deckBuilder())\n\n\n  \n\n  useEffect(()=>{\n    const fetchPlayer= async () => {\n        try{\n          const res= await import(\"./data\")\n          setPlayerList(res.default)\n          \n          dealing()   \n              \n        }catch(err){\n            console.log(\"err: \",err)\n        }\n\n    }\n    fetchPlayer()\n   \n},[isRoundStarted])\n\n\n\n\n \n   \n    \n    \n     \n    \n  \n  \n  const dealing=(playerList)=>{\n    const temp_playerList={...playerList}\n    for (let i=0;i<temp_playerList.length;i++){\n        temp_playerList[i].cardList.push(deck.pop())\n    }\n    setPlayerList(temp_playerList)\n    console.log(\"dealing called\",playerList)\n    \n    \n  }\n \n  \n\n\n  \n\n  return (\n    <>\n    {console.log(playerList)}\n    <div \n    className={styles.table}\n    style={{backgroundImage: `url(${backgroundImage})`}}\n    >\n    <Dealer/>\n    \n    {playerList.map((player, index)=><Player\n      key={index}\n      playerIndex={index}\n      name={player.name}\n      isMe={player.isMe}\n      bet={player.bet}\n      cardList={player.cardList}/>\n    )}\n    \n    </div>\n   \n    </>\n  )\n}\n\nexport default App;\n"],"mappings":";;;AACA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,eAAP,MAA4B,yBAA5B,C,CAEA;;;;;AAIA,MAAMC,GAAG,GAAC,MAAK;EAAA;;EACb,MAAMC,WAAW,GAAC,MAAI;IACpB,MAAMC,SAAS,GAAC,EAAhB;IACA,MAAMC,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,IAA9C,EAAoD,GAApD,EAAyD,GAAzD,EAA8D,GAA9D,CAAf;IACA,MAAMC,KAAK,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAd;;IAGA,KAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACD,KAAK,CAACE,MAArB,EAA4BD,CAAC,EAA7B,EAAiC;MAC/B,KAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,MAAM,CAACG,MAArB,EAA4BC,CAAC,EAA7B,EAAgC;QAC/BL,SAAS,CAACM,IAAV,CAAe;UAACC,KAAK,EAACN,MAAM,CAACI,CAAD,CAAb;UACHG,IAAI,EAACN,KAAK,CAACC,CAAD;QADP,CAAf;MAEA;IACF;;IACD,OAAOM,SAAS,CAACT,SAAD,CAAhB;EACA,CAbF;;EAeC,MAAMS,SAAS,GAAET,SAAD,IAAa;IAC3B,KAAK,IAAIG,CAAC,GAAGH,SAAS,CAACI,MAAV,GAAmB,CAAhC,EAAmCD,CAAC,GAAG,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;MAC7C,IAAIE,CAAC,GAAGK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBT,CAAC,GAAG,CAArB,CAAX,CAAR;MACA,IAAIU,IAAI,GAAGb,SAAS,CAACG,CAAD,CAApB;MACAH,SAAS,CAACG,CAAD,CAAT,GAAeH,SAAS,CAACK,CAAD,CAAxB;MACAL,SAAS,CAACK,CAAD,CAAT,GAAeQ,IAAf;IACH;;IACD,OAAOb,SAAP;EAGC,CAVD;;EAaD,MAAMc,eAAe,GAAC,IAAtB;EAEA,MAAM,CAACC,cAAD,EAAgBC,iBAAhB,IAAmCxB,QAAQ,CAAC,IAAD,CAAjD;EAEA,MAAK,CAACyB,UAAD,EAAYC,aAAZ,IAA2B1B,QAAQ,CAAC,EAAD,CAAxC;EAEA,MAAK,CAAC2B,IAAD,EAAMC,OAAN,IAAe5B,QAAQ,CAACO,WAAW,EAAZ,CAA5B;EAKAN,SAAS,CAAC,MAAI;IACZ,MAAM4B,WAAW,GAAE,YAAY;MAC3B,IAAG;QACD,MAAMC,GAAG,GAAE,MAAM,OAAO,QAAP,CAAjB;QACAJ,aAAa,CAACI,GAAG,CAACC,OAAL,CAAb;QAEAC,OAAO;MAER,CAND,CAMC,OAAMC,GAAN,EAAU;QACPC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,GAApB;MACH;IAEJ,CAXD;;IAYAJ,WAAW;EAEd,CAfU,EAeT,CAACN,cAAD,CAfS,CAAT;;EA4BA,MAAMS,OAAO,GAAEP,UAAD,IAAc;IAC1B,MAAMW,eAAe,GAAC,EAAC,GAAGX;IAAJ,CAAtB;;IACA,KAAK,IAAId,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACyB,eAAe,CAACxB,MAA/B,EAAsCD,CAAC,EAAvC,EAA0C;MACtCyB,eAAe,CAACzB,CAAD,CAAf,CAAmB0B,QAAnB,CAA4BvB,IAA5B,CAAiCa,IAAI,CAACW,GAAL,EAAjC;IACH;;IACDZ,aAAa,CAACU,eAAD,CAAb;IACAF,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BV,UAA7B;EAGD,CATD;;EAgBA,oBACE;IAAA,WACCS,OAAO,CAACC,GAAR,CAAYV,UAAZ,CADD,eAEA;MACA,SAAS,EAAErB,MAAM,CAACmC,KADlB;MAEA,KAAK,EAAE;QAAClC,eAAe,EAAG,OAAMA,eAAgB;MAAzC,CAFP;MAAA,wBAIA,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QAJA,EAMCoB,UAAU,CAACe,GAAX,CAAe,CAACC,MAAD,EAASC,KAAT,kBAAiB,QAAC,MAAD;QAE/B,WAAW,EAAEA,KAFkB;QAG/B,IAAI,EAAED,MAAM,CAACE,IAHkB;QAI/B,IAAI,EAAEF,MAAM,CAACG,IAJkB;QAK/B,GAAG,EAAEH,MAAM,CAACI,GALmB;QAM/B,QAAQ,EAAEJ,MAAM,CAACJ;MANc,GAC1BK,KAD0B;QAAA;QAAA;QAAA;MAAA,QAAhC,CAND;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA,gBADF;AAsBD,CA1GD;;GAAMpC,G;;KAAAA,G;AA4GN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}