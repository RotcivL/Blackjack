{"ast":null,"code":"var _jsxFileName = \"/Users/tedwu/Desktop/blackjack/blackjack/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport Dealer from './components/Dealer';\nimport Player from './components/Players';\nimport styles from \"../src/style/table.module.css\";\nimport backgroundImage from \"./table_background.jpeg\"; //import ReactDOM from 'react-dom';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dealingInterval = 2000;\n  const [isRoundStarted, setIsRoundStarted] = useState(true);\n  const [playerList, setPlayerList] = useState([]);\n  const [deck, setDeck] = useState([]);\n  useEffect(() => {\n    const fetchPlayer = async () => {\n      try {\n        const res = await import(\"./data\");\n        await setPlayerList(res.default);\n        deckBuilder(); //dealing(res.default)   \n      } catch (err) {\n        console.log(\"can't find such players\", err);\n      }\n    };\n\n    fetchPlayer();\n  });\n\n  const deckBuilder = () => {\n    const values = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\n    const types = [\"C\", \"D\", \"H\", \"S\"];\n    const temp_deck = [];\n\n    for (let i = 0; i < types.length; i++) {\n      for (let j = 0; j < values.length; j++) {\n        temp_deck.push({\n          value: values[j],\n          type: types[i]\n        });\n      }\n    }\n\n    reshuffle(temp_deck);\n  };\n\n  const reshuffle = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n\n    setDeck(array);\n    console.log(deck);\n  };\n\n  const dealing = playerList => {\n    const temp_playerList = { ...playerList\n    };\n\n    for (let i = 0; i < temp_playerList.length; i++) {\n      temp_playerList[i].cardList.push(deck.pop());\n      setPlayerList(temp_playerList); //console.log(playerList)\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.table,\n      style: {\n        backgroundImage: `url(${backgroundImage})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(Dealer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this), console.log(playerList), playerList.map((player, index) => /*#__PURE__*/_jsxDEV(Player, {\n        playerIndex: index,\n        name: player.name,\n        isMe: player.isMe,\n        bet: player.bet,\n        cardList: player.cardList\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 38\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"emOLAr6i7i2vVKJIsOOqmbrz+Ko=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Dealer","Player","styles","backgroundImage","App","dealingInterval","isRoundStarted","setIsRoundStarted","playerList","setPlayerList","deck","setDeck","fetchPlayer","res","default","deckBuilder","err","console","log","values","types","temp_deck","i","length","j","push","value","type","reshuffle","array","Math","floor","random","temp","dealing","temp_playerList","cardList","pop","table","map","player","index","name","isMe","bet"],"sources":["/Users/tedwu/Desktop/blackjack/blackjack/src/App.js"],"sourcesContent":["\nimport { React, useState, useEffect } from 'react';\nimport Dealer from './components/Dealer';\nimport Player from './components/Players';\nimport styles from \"../src/style/table.module.css\"\nimport backgroundImage from \"./table_background.jpeg\"\n\n//import ReactDOM from 'react-dom';\n\n\n\nconst App=()=> {\n \n\n  const dealingInterval=2000;\n  \n  const [isRoundStarted,setIsRoundStarted]=useState(true)\n\n  const[playerList,setPlayerList]=useState([])\n  const[deck,setDeck]=useState([])\n\n  useEffect(()=>{\n    const fetchPlayer= async () => {\n        try{\n          const res= await import(\"./data\")\n          await setPlayerList(res.default)\n          deckBuilder()\n          //dealing(res.default)   \n              \n        }catch(err){\n            console.log(\"can't find such players\",err)\n        }\n\n    }\n    fetchPlayer()\n   \n},)\n\n\n \n   \n    \n    \n     \n    \n  \n  const deckBuilder=()=>{\n   \n   const values = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\n   const types = [\"C\", \"D\", \"H\", \"S\"];\n   const temp_deck=[]\n   \n   for (let i=0;i<types.length;i++ ){\n     for(let j=0;j<values.length;j++){\n      temp_deck.push({value:values[j],\n                  type:types[i]})\n     }\n   }\n   reshuffle(temp_deck)\n  }\n\n  const reshuffle=(array)=>{\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n  }\n  setDeck(array)\n  console.log(deck)\n \n  \n  }\n  const dealing=(playerList)=>{\n    const temp_playerList={...playerList}\n    for (let i=0;i<temp_playerList.length;i++){\n        temp_playerList[i].cardList.push(deck.pop())\n        setPlayerList(temp_playerList)\n        //console.log(playerList)\n      \n    }\n    \n    \n  }\n \n  \n\n\n  \n\n  return (\n    <>\n    <div \n    className={styles.table}\n    style={{backgroundImage: `url(${backgroundImage})`}}\n    >\n    <Dealer/>\n    {console.log(playerList)}\n    {playerList.map((player, index)=><Player\n      key={index}\n      playerIndex={index}\n      name={player.name}\n      isMe={player.isMe}\n      bet={player.bet}\n      cardList={player.cardList}/>\n    )}\n    \n    </div>\n   \n    </>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}