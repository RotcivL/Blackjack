{"ast":null,"code":"var _jsxFileName = \"/Users/tedwu/Desktop/blackjack/blackjack/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport Dealer from './components/Dealer';\nimport Player from './components/Players';\nimport styles from \"../src/style/table.module.css\";\nimport backgroundImage from \"./table_background.jpeg\"; //import ReactDOM from 'react-dom';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dealingInterval = 2000;\n  const [isRoundStarted, setIsRoundStarted] = useState(true);\n  const [playerList, setPlayerList] = useState([]);\n  const [deck, setDeck] = useState(deckBuilder());\n  useEffect(() => {\n    const fetchPlayer = async () => {\n      try {\n        const res = await import(\"./data\");\n        setPlayerList(res.default); //dealing(res.default)   \n      } catch (err) {\n        console.log(\"err: \", err);\n      }\n    };\n\n    fetchPlayer();\n  });\n\n  const dealing = playerList => {\n    const temp_playerList = { ...playerList\n    };\n\n    for (let i = 0; i < temp_playerList.length; i++) {\n      temp_playerList[i].cardList.push(deck.pop());\n    }\n\n    setPlayerList(temp_playerList);\n    console.log(\"dealing called\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(\"deck: \", deck), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.table,\n      style: {\n        backgroundImage: `url(${backgroundImage})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(Dealer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), playerList.map((player, index) => /*#__PURE__*/_jsxDEV(Player, {\n        playerIndex: index,\n        name: player.name,\n        isMe: player.isMe,\n        bet: player.bet,\n        cardList: player.cardList\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 38\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"MXq2et8YU7tZSR+LmfqkY4mgmQ8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Dealer","Player","styles","backgroundImage","App","dealingInterval","isRoundStarted","setIsRoundStarted","playerList","setPlayerList","deck","setDeck","deckBuilder","fetchPlayer","res","default","err","console","log","dealing","temp_playerList","i","length","cardList","push","pop","table","map","player","index","name","isMe","bet"],"sources":["/Users/tedwu/Desktop/blackjack/blackjack/src/App.js"],"sourcesContent":["\nimport { React, useState, useEffect } from 'react';\nimport Dealer from './components/Dealer';\nimport Player from './components/Players';\nimport styles from \"../src/style/table.module.css\"\nimport backgroundImage from \"./table_background.jpeg\"\n\n//import ReactDOM from 'react-dom';\n\n\n\nconst App=()=> {\n \n\n  const dealingInterval=2000;\n  \n  const [isRoundStarted,setIsRoundStarted]=useState(true)\n\n  const[playerList,setPlayerList]=useState([])\n  \n  const[deck,setDeck]=useState(deckBuilder())\n\n\n  \n\n  useEffect(()=>{\n    const fetchPlayer= async () => {\n        try{\n          const res= await import(\"./data\")\n          setPlayerList(res.default)\n          \n          //dealing(res.default)   \n              \n        }catch(err){\n            console.log(\"err: \",err)\n        }\n\n    }\n    fetchPlayer()\n   \n},)\n\n\n\n\n \n   \n    \n    \n     \n    \n  \n  \n  const dealing=(playerList)=>{\n    const temp_playerList={...playerList}\n    for (let i=0;i<temp_playerList.length;i++){\n        temp_playerList[i].cardList.push(deck.pop())\n    }\n    setPlayerList(temp_playerList)\n    console.log(\"dealing called\")\n    \n    \n  }\n \n  \n\n\n  \n\n  return (\n    <>\n    {console.log(\"deck: \",deck)}\n    <div \n    className={styles.table}\n    style={{backgroundImage: `url(${backgroundImage})`}}\n    >\n    <Dealer/>\n    \n    {playerList.map((player, index)=><Player\n      key={index}\n      playerIndex={index}\n      name={player.name}\n      isMe={player.isMe}\n      bet={player.bet}\n      cardList={player.cardList}/>\n    )}\n    \n    </div>\n   \n    </>\n  )\n}\n\nexport default App;\n"],"mappings":";;;AACA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,eAAP,MAA4B,yBAA5B,C,CAEA;;;;;AAIA,MAAMC,GAAG,GAAC,MAAK;EAAA;;EAGb,MAAMC,eAAe,GAAC,IAAtB;EAEA,MAAM,CAACC,cAAD,EAAgBC,iBAAhB,IAAmCT,QAAQ,CAAC,IAAD,CAAjD;EAEA,MAAK,CAACU,UAAD,EAAYC,aAAZ,IAA2BX,QAAQ,CAAC,EAAD,CAAxC;EAEA,MAAK,CAACY,IAAD,EAAMC,OAAN,IAAeb,QAAQ,CAACc,WAAW,EAAZ,CAA5B;EAKAb,SAAS,CAAC,MAAI;IACZ,MAAMc,WAAW,GAAE,YAAY;MAC3B,IAAG;QACD,MAAMC,GAAG,GAAE,MAAM,OAAO,QAAP,CAAjB;QACAL,aAAa,CAACK,GAAG,CAACC,OAAL,CAAb,CAFC,CAID;MAED,CAND,CAMC,OAAMC,GAAN,EAAU;QACPC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,GAApB;MACH;IAEJ,CAXD;;IAYAH,WAAW;EAEd,CAfU,CAAT;;EA4BA,MAAMM,OAAO,GAAEX,UAAD,IAAc;IAC1B,MAAMY,eAAe,GAAC,EAAC,GAAGZ;IAAJ,CAAtB;;IACA,KAAK,IAAIa,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACD,eAAe,CAACE,MAA/B,EAAsCD,CAAC,EAAvC,EAA0C;MACtCD,eAAe,CAACC,CAAD,CAAf,CAAmBE,QAAnB,CAA4BC,IAA5B,CAAiCd,IAAI,CAACe,GAAL,EAAjC;IACH;;IACDhB,aAAa,CAACW,eAAD,CAAb;IACAH,OAAO,CAACC,GAAR,CAAY,gBAAZ;EAGD,CATD;;EAgBA,oBACE;IAAA,WACCD,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBR,IAArB,CADD,eAEA;MACA,SAAS,EAAER,MAAM,CAACwB,KADlB;MAEA,KAAK,EAAE;QAACvB,eAAe,EAAG,OAAMA,eAAgB;MAAzC,CAFP;MAAA,wBAIA,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QAJA,EAMCK,UAAU,CAACmB,GAAX,CAAe,CAACC,MAAD,EAASC,KAAT,kBAAiB,QAAC,MAAD;QAE/B,WAAW,EAAEA,KAFkB;QAG/B,IAAI,EAAED,MAAM,CAACE,IAHkB;QAI/B,IAAI,EAAEF,MAAM,CAACG,IAJkB;QAK/B,GAAG,EAAEH,MAAM,CAACI,GALmB;QAM/B,QAAQ,EAAEJ,MAAM,CAACL;MANc,GAC1BM,KAD0B;QAAA;QAAA;QAAA;MAAA,QAAhC,CAND;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA,gBADF;AAsBD,CAhFD;;GAAMzB,G;;KAAAA,G;AAkFN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}