{"ast":null,"code":"import Web3 from \"web3\";\nimport BlackJackContractBuild from \"contracts/BlackJackV2.json\"; //let BlackJackContract;\n\nlet provider = window.ethereum;\nconst web3 = new Web3(provider);\nlet isInitial = false;\nlet BlackJackContract;\nlet accounts;\nlet currentP; //balance\n\nlet dealer;\nlet dealerBal;\nlet player;\nlet playerBal;\nlet contractBal; //const PROVIDER_URL='http://localhost:3000'\n\nexport const initializeContract = async () => {\n  if (!isInitial) {\n    const networkID = await web3.eth.net.getId();\n    const contractAddress = BlackJackContractBuild.networks[networkID].address;\n    BlackJackContract = new web3.eth.Contract(BlackJackContractBuild.abi, contractAddress);\n    accounts = await web3.eth.getAccounts();\n    isInitial = true; //should be removed in production.\n  }\n\n  currentP = accounts[0];\n  player = await BlackJackContract.methods.player().call();\n  playerBal = await BlackJackContract.methods.playerBalance().call();\n  dealer = await BlackJackContract.methods.dealer().call();\n  dealerBal = await BlackJackContract.methods.dealerBalance().call();\n  contractBal = await web3.eth.getBalance(contractAddress);\n  console.log(`current player (Metamask...):${currentP}`);\n  console.log(`player :${player}`);\n  console.log(`player bal:${playerBal}`);\n  console.log(`current dealer:${dealer}`);\n  console.log(`dealer bal:${dealerBal}`);\n  console.log(`contract bal:${contractBal}`); //dealerBal= await BlackJackContract.methods.dealerBalance().call()\n  //const maxb=await BlackJackContract.methods.maxBet().call()\n  //const join=await BlackJackContract.methods.joinGame().send({from:accounts[0],value:10})\n  //data= await web3.eth.getCode(contractAddress)\n  //const deploy= await  BlackJackContract.deploy({data:data,arguments: [10, 1000]})\n  //console.log(dealerBal)\n  //console.log(maxb)\n  //const dealer= await BlackJackContract.methods.dealer().call()\n  //const balance=await web3.eth.getBalance(contractAddress)\n};\nexport const joinGame = async () => {\n  if (!isInitial) {\n    await initializeContract();\n  }\n\n  return BlackJackContract.methods.joinGame().send({\n    from: accounts[0],\n    value: 10\n  });\n};\nexport const getDealer = async () => {\n  if (!isInitial) {\n    await initializeContract();\n  }\n\n  return BlackJackContract.methods.dealer().call();\n};","map":{"version":3,"names":["Web3","BlackJackContractBuild","provider","window","ethereum","web3","isInitial","BlackJackContract","accounts","currentP","dealer","dealerBal","player","playerBal","contractBal","initializeContract","networkID","eth","net","getId","contractAddress","networks","address","Contract","abi","getAccounts","methods","call","playerBalance","dealerBalance","getBalance","console","log","joinGame","send","from","value","getDealer"],"sources":["/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/Web3Client.js"],"sourcesContent":["import Web3 from \"web3\"\nimport BlackJackContractBuild from \"contracts/BlackJackV2.json\"\n\n//let BlackJackContract;\nlet provider = window.ethereum \nconst web3 =new Web3(provider)\nlet isInitial=false;\n\nlet BlackJackContract;\nlet accounts;\nlet currentP\n//balance\nlet dealer;\nlet dealerBal;\nlet player;\nlet playerBal;\nlet contractBal;\n\n//const PROVIDER_URL='http://localhost:3000'\n\nexport const initializeContract= async ()=>{\n\nif(!isInitial){\n\nconst networkID= await web3.eth.net.getId()\nconst contractAddress=BlackJackContractBuild.networks[networkID].address \nBlackJackContract= new web3.eth.Contract(BlackJackContractBuild.abi,contractAddress)\n\naccounts = await web3.eth.getAccounts();\nisInitial=true\n\n//should be removed in production.\n\n\n}\ncurrentP=accounts[0]\nplayer= await BlackJackContract.methods.player().call()\nplayerBal= await BlackJackContract.methods.playerBalance().call()\ndealer= await BlackJackContract.methods.dealer().call()\ndealerBal=await BlackJackContract.methods.dealerBalance().call()\ncontractBal=await web3.eth.getBalance(contractAddress)\n\nconsole.log(`current player (Metamask...):${currentP}`)\nconsole.log(`player :${player}`)\nconsole.log(`player bal:${playerBal}`)\nconsole.log(`current dealer:${dealer}`)\nconsole.log(`dealer bal:${dealerBal}`)\nconsole.log(`contract bal:${contractBal}`)\n\n//dealerBal= await BlackJackContract.methods.dealerBalance().call()\n//const maxb=await BlackJackContract.methods.maxBet().call()\n//const join=await BlackJackContract.methods.joinGame().send({from:accounts[0],value:10})\n//data= await web3.eth.getCode(contractAddress)\n//const deploy= await  BlackJackContract.deploy({data:data,arguments: [10, 1000]})\n//console.log(dealerBal)\n//console.log(maxb)\n//const dealer= await BlackJackContract.methods.dealer().call()\n//const balance=await web3.eth.getBalance(contractAddress)\n\n} \n\n\n\nexport const joinGame= async ()=>{\n    if(!isInitial){\n        await initializeContract();}\n   \n        return BlackJackContract.methods.joinGame().send({from:accounts[0],value:10})\n    }\n    \n\n\n\nexport const getDealer= async ()=>{\n    if(!isInitial){\n        await initializeContract();\n    }\n        return BlackJackContract.methods.dealer().call()\n    }\n    \n\n\n\n\n\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,sBAAP,MAAmC,4BAAnC,C,CAEA;;AACA,IAAIC,QAAQ,GAAGC,MAAM,CAACC,QAAtB;AACA,MAAMC,IAAI,GAAE,IAAIL,IAAJ,CAASE,QAAT,CAAZ;AACA,IAAII,SAAS,GAAC,KAAd;AAEA,IAAIC,iBAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,QAAJ,C,CACA;;AACA,IAAIC,MAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,MAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,WAAJ,C,CAEA;;AAEA,OAAO,MAAMC,kBAAkB,GAAE,YAAU;EAE3C,IAAG,CAACT,SAAJ,EAAc;IAEd,MAAMU,SAAS,GAAE,MAAMX,IAAI,CAACY,GAAL,CAASC,GAAT,CAAaC,KAAb,EAAvB;IACA,MAAMC,eAAe,GAACnB,sBAAsB,CAACoB,QAAvB,CAAgCL,SAAhC,EAA2CM,OAAjE;IACAf,iBAAiB,GAAE,IAAIF,IAAI,CAACY,GAAL,CAASM,QAAb,CAAsBtB,sBAAsB,CAACuB,GAA7C,EAAiDJ,eAAjD,CAAnB;IAEAZ,QAAQ,GAAG,MAAMH,IAAI,CAACY,GAAL,CAASQ,WAAT,EAAjB;IACAnB,SAAS,GAAC,IAAV,CAPc,CASd;EAGC;;EACDG,QAAQ,GAACD,QAAQ,CAAC,CAAD,CAAjB;EACAI,MAAM,GAAE,MAAML,iBAAiB,CAACmB,OAAlB,CAA0Bd,MAA1B,GAAmCe,IAAnC,EAAd;EACAd,SAAS,GAAE,MAAMN,iBAAiB,CAACmB,OAAlB,CAA0BE,aAA1B,GAA0CD,IAA1C,EAAjB;EACAjB,MAAM,GAAE,MAAMH,iBAAiB,CAACmB,OAAlB,CAA0BhB,MAA1B,GAAmCiB,IAAnC,EAAd;EACAhB,SAAS,GAAC,MAAMJ,iBAAiB,CAACmB,OAAlB,CAA0BG,aAA1B,GAA0CF,IAA1C,EAAhB;EACAb,WAAW,GAAC,MAAMT,IAAI,CAACY,GAAL,CAASa,UAAT,CAAoBV,eAApB,CAAlB;EAEAW,OAAO,CAACC,GAAR,CAAa,gCAA+BvB,QAAS,EAArD;EACAsB,OAAO,CAACC,GAAR,CAAa,WAAUpB,MAAO,EAA9B;EACAmB,OAAO,CAACC,GAAR,CAAa,cAAanB,SAAU,EAApC;EACAkB,OAAO,CAACC,GAAR,CAAa,kBAAiBtB,MAAO,EAArC;EACAqB,OAAO,CAACC,GAAR,CAAa,cAAarB,SAAU,EAApC;EACAoB,OAAO,CAACC,GAAR,CAAa,gBAAelB,WAAY,EAAxC,EA3B2C,CA6B3C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEC,CAvCM;AA2CP,OAAO,MAAMmB,QAAQ,GAAE,YAAU;EAC7B,IAAG,CAAC3B,SAAJ,EAAc;IACV,MAAMS,kBAAkB,EAAxB;EAA4B;;EAE5B,OAAOR,iBAAiB,CAACmB,OAAlB,CAA0BO,QAA1B,GAAqCC,IAArC,CAA0C;IAACC,IAAI,EAAC3B,QAAQ,CAAC,CAAD,CAAd;IAAkB4B,KAAK,EAAC;EAAxB,CAA1C,CAAP;AACH,CALE;AAUP,OAAO,MAAMC,SAAS,GAAE,YAAU;EAC9B,IAAG,CAAC/B,SAAJ,EAAc;IACV,MAAMS,kBAAkB,EAAxB;EACH;;EACG,OAAOR,iBAAiB,CAACmB,OAAlB,CAA0BhB,MAA1B,GAAmCiB,IAAnC,EAAP;AACH,CALE"},"metadata":{},"sourceType":"module"}