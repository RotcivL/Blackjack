{"ast":null,"code":"import Web3 from \"web3\";\nimport BlackJackContractBuild from \"./BlackJackV2.json\"; //let BlackJackContract;\n\nlet isInitial = false; //const PROVIDER_URL='http://localhost:3000'\n\nexport const deploy = async () => {\n  let provider = window.ethereum;\n  const web3 = new Web3(provider);\n  const networkID = await web3.eth.net.getId(); //console.log(networkID)\n  //console.log(BlackJackContractBuild.networks[5777].address)\n\n  try {\n    const BlackJackContract = new web3.eth.Contract(BlackJackContractBuild.abi, BlackJackContractBuild.networks[networkID].address); //const account= await BlackJackContract.methods.getDealer().call()\n\n    const accounts = await web3.eth.getAccounts();\n    const dealer = await BlackJackContract.methods.getDealer().send({\n      from: accounts[0]\n    });\n    console.lo;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const joinGame = () => {\n  if (isInitial) {\n    deploy();\n  } else {//BlackJackContract.methods.joinGame().send()\n  }\n};","map":{"version":3,"names":["Web3","BlackJackContractBuild","isInitial","deploy","provider","window","ethereum","web3","networkID","eth","net","getId","BlackJackContract","Contract","abi","networks","address","accounts","getAccounts","dealer","methods","getDealer","send","from","console","lo","err","log","joinGame"],"sources":["/Users/tedwu/Desktop/未命名檔案夾 4/Blackjack/Blackjack_frontend/src/Web3Client.js"],"sourcesContent":["import Web3 from \"web3\"\nimport BlackJackContractBuild from \"./BlackJackV2.json\"\n\n//let BlackJackContract;\nlet isInitial=false;\n//const PROVIDER_URL='http://localhost:3000'\n\nexport const deploy= async ()=>{\n\nlet provider = window.ethereum \n\nconst web3 =new Web3(provider)\n\nconst networkID= await web3.eth.net.getId()\n//console.log(networkID)\n//console.log(BlackJackContractBuild.networks[5777].address)\n\ntry{\n    \n    const BlackJackContract= new web3.eth.Contract(BlackJackContractBuild.abi,BlackJackContractBuild.networks[networkID].address)\n    //const account= await BlackJackContract.methods.getDealer().call()\n    const accounts = await web3.eth.getAccounts();\n    const dealer= await BlackJackContract.methods.getDealer().send({from:accounts[0]})\n    console.lo\n}catch(err){\nconsole.log(err)\n}\n\n\n\n} \n\n\n\nexport const joinGame=()=>{\n    if(isInitial){\n        deploy();\n    }\n    else{\n        //BlackJackContract.methods.joinGame().send()\n    }\n    \n\n}\n\n\n\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,sBAAP,MAAmC,oBAAnC,C,CAEA;;AACA,IAAIC,SAAS,GAAC,KAAd,C,CACA;;AAEA,OAAO,MAAMC,MAAM,GAAE,YAAU;EAE/B,IAAIC,QAAQ,GAAGC,MAAM,CAACC,QAAtB;EAEA,MAAMC,IAAI,GAAE,IAAIP,IAAJ,CAASI,QAAT,CAAZ;EAEA,MAAMI,SAAS,GAAE,MAAMD,IAAI,CAACE,GAAL,CAASC,GAAT,CAAaC,KAAb,EAAvB,CAN+B,CAO/B;EACA;;EAEA,IAAG;IAEC,MAAMC,iBAAiB,GAAE,IAAIL,IAAI,CAACE,GAAL,CAASI,QAAb,CAAsBZ,sBAAsB,CAACa,GAA7C,EAAiDb,sBAAsB,CAACc,QAAvB,CAAgCP,SAAhC,EAA2CQ,OAA5F,CAAzB,CAFD,CAGC;;IACA,MAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACE,GAAL,CAASS,WAAT,EAAvB;IACA,MAAMC,MAAM,GAAE,MAAMP,iBAAiB,CAACQ,OAAlB,CAA0BC,SAA1B,GAAsCC,IAAtC,CAA2C;MAACC,IAAI,EAACN,QAAQ,CAAC,CAAD;IAAd,CAA3C,CAApB;IACAO,OAAO,CAACC,EAAR;EACH,CAPD,CAOC,OAAMC,GAAN,EAAU;IACXF,OAAO,CAACG,GAAR,CAAYD,GAAZ;EACC;AAIA,CAvBM;AA2BP,OAAO,MAAME,QAAQ,GAAC,MAAI;EACtB,IAAG1B,SAAH,EAAa;IACTC,MAAM;EACT,CAFD,MAGI,CACA;EACH;AAGJ,CATM"},"metadata":{},"sourceType":"module"}